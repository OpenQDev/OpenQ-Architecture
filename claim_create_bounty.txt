title: Mint and Claim Bounty

_: **Mint Bounty**

Browser -> OpenQ: `mintBounty(issueId)`

note:
Browser calls OpenQ contract deployed on Polygon

_: **Claim Bounty (User can withdraw)**
Browser -> Github: User logs into GitHub with OAuth 2.0 Flow

Github -> Browser: GitHub OAuth API returns a `gho` access token confirming the user's identity.

Browser -> OpenQOracle: calls `/claim` on OpenQOracle
note:
Request Body { `issueUrl` }

Request Cookie { `github_oauth_token httpOnly secure signed` }

OpenQOracle -> OpenQOracle: Verify User can withdraw
note:
Verifies that:

1. The GitHub OAuth token is valid
2. The issue is closed on GitHub
3. The issue is OPEN on OpenQ (AKA "unclaimed")
4. The issue is closed on GitHub from a PR whose login matches that of the GitHub OAuth token

OpenQOracle -> OpenQ : Calls the `onlyOwner` contract method `claimBounty(issueId, payoutAddress)`